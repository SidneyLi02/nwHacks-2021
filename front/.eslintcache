[{"/Users/don/GitHub/nwhacks2021/front/src/index.js":"1","/Users/don/GitHub/nwhacks2021/front/src/App.js":"2","/Users/don/GitHub/nwhacks2021/front/src/components/Main.js":"3","/Users/don/GitHub/nwhacks2021/front/src/components/Layout.js":"4","/Users/don/GitHub/nwhacks2021/front/src/components/Auth.js":"5","/Users/don/GitHub/nwhacks2021/front/src/network/index.js":"6"},{"size":214,"mtime":1610305125466,"results":"7","hashOfConfig":"8"},{"size":779,"mtime":1610300156785,"results":"9","hashOfConfig":"8"},{"size":6538,"mtime":1610288826916,"results":"10","hashOfConfig":"8"},{"size":2873,"mtime":1610288826916,"results":"11","hashOfConfig":"8"},{"size":1623,"mtime":1610300442947,"results":"12","hashOfConfig":"8"},{"size":349,"mtime":1610300141625,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"btgngp",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"/Users/don/GitHub/nwhacks2021/front/src/index.js",[],["30","31"],"/Users/don/GitHub/nwhacks2021/front/src/App.js",[],"/Users/don/GitHub/nwhacks2021/front/src/components/Main.js",["32"],"import React, {useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport imgOne from './img/card1.jpg';\nimport imgTwo from './img/card2.jpg';\nimport imgThree from './img/card3.jpg';\nimport Form from 'react-bootstrap/Form';\n\nimport './Main.css';\n\nexport default function Main() {\n\n    const [switchSearch, setSearch] = useState(false);\n\n    {/* in future, can switch the coniditonal rendering within the bootstrap\n    rather than rerendering the entire page's DOM */}\n    if (switchSearch) {\n        return (\n            <Container fluid>\n                <Row className = \"fillBottom\">\n\n                    {/* side column */}\n                    <Col md={2}> \n                        <Row> <h4 className = \"appTitle\" style = {{marginTop: '50px'}}>The Goodness Repository</h4></Row>\n                        <br></br>\n                        <div className = \"btnDisplay\">\n                        <Button onClick = {() => setSearch(false)} variant=\"outline-primary\">Home</Button>\n                        </div>\n                        {/* flex box didn't work here... */}\n                        <br></br>\n                        <div className = \"btnDisplay\">\n                        <Button onClick = {() => setSearch(true)} variant=\"outline-secondary\">Search</Button>\n                        </div>\n                        <br></br>\n                        <br></br>\n                        <br></br>\n                        <p className = \"appSub\"> Archives</p>\n                        <div className = \"flexBTN\">\n                            <Button style = {{marginBottom: '5px'}} variant = \"outline-dark\">December 2020</Button>\n                            <Button style = {{marginBottom: '5px'}} variant = \"outline-dark\">November 2020</Button>\n                            <Button style = {{marginBottom: '5px'}} variant = \"outline-dark\">October 2020</Button>\n                        </div>\n                    </Col>\n\n                    {/* empty space */}\n                    <Col className = \"kek\" md={1} /> \n                    <Col md={9}>\n\n                    <Form className = \"centerSearch\">\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>How are you feeling?</Form.Label>\n\n                            {/* pressing enter somehow takes you back to Layout.js render */}\n                            <Form.Control type=\"text\" placeholder=\"I'm feeling...\" />\n                            <Form.Text className=\"text-muted\">\n                            We'll allow you to relive back your past memories.\n                            </Form.Text>\n                        </Form.Group>\n                    </Form>\n\n                    </Col>\n                </Row>\n            </Container>\n        )\n    } else {\n\n    return (\n        <div>\n            <Container fluid>\n                <Row className = \"fillBottom\">\n\n                    {/* side column */}\n                    <Col md={2}> \n                        <Row> <h4 className = \"appTitle\" style = {{marginTop: '50px'}}>The Goodness Repository</h4></Row>\n                        <br></br>\n                        <div className = \"btnDisplay\">\n                        <Button onClick = {() => setSearch(false)} variant=\"outline-primary\">Home</Button>\n                        </div>\n                        {/* flex box didn't work here... */}\n                        <br></br>\n                        <div className = \"btnDisplay\">\n                        <Button onClick = {() => setSearch(true)} variant=\"outline-secondary\">Search</Button>\n                        </div>\n                        <br></br>\n                        <br></br>\n                        <br></br>\n                        <p className = \"appSub\"> Archives</p>\n                        <div className = \"flexBTN\">\n                            <Button style = {{marginBottom: '5px'}} variant = \"outline-dark\">December 2020</Button>\n                            <Button style = {{marginBottom: '5px'}} variant = \"outline-dark\">November 2020</Button>\n                            <Button style = {{marginBottom: '5px'}} variant = \"outline-dark\">October 2020</Button>\n                        </div>\n                    </Col>\n\n                    {/* empty space */}\n                    <Col className = \"kek\" md={1} /> \n\n                    {/* first column with content */}\n                    <Col md={3}> \n\n                    <Card className = \"alignCenter\" style={{ width: '18rem' }}>\n                    <Card.Img variant=\"top\" src= {imgOne}/>\n                    <Card.Body>\n                        <Card.Title>August 2, 2019</Card.Title>\n                        <Card.Text>\n                        I was talking with my old high school friends at the local outdoor pool\n                        BBQ event.\n                        </Card.Text>\n                        <Button variant=\"primary\">Relive it.</Button>\n                    </Card.Body>\n                    </Card>\n                    </Col>\n\n                    <Col md={3}>\n\n                    <Card className = \"alignCenter\" style={{ width: '18rem' }}>\n                    <Card.Img variant=\"top\" src= {imgTwo} />\n                    <Card.Body>\n                        <Card.Title>December 23, 2003</Card.Title>\n                        <Card.Text>\n                        My daughter and I spent our time after her pre-school graduation playing\n                        around at Stanley Park.\n                        </Card.Text>\n                        <Button variant=\"primary\">Relive it.</Button>\n                    </Card.Body>\n                    </Card>\n\n                    </Col>\n\n                    <Col md={3}>\n\n                    <Card className = \"alignCenter\" style={{ width: '18rem' }}>\n                    <Card.Img variant=\"top\" src={imgThree} />\n                    <Card.Body>\n                        <Card.Title>April 13, 2012</Card.Title>\n                        <Card.Text>\n                        My grandfather laughed at my corny jokes and said that he was proud of me.\n                        </Card.Text>\n                        <Button variant=\"primary\">Relive it.</Button>\n                    </Card.Body>\n                    </Card>\n                    \n                    </Col>\n\n                </Row>\n            </Container>\n        </div>\n    )\n    }\n}\n","/Users/don/GitHub/nwhacks2021/front/src/components/Layout.js",[],"/Users/don/GitHub/nwhacks2021/front/src/components/Auth.js",[],"/Users/don/GitHub/nwhacks2021/front/src/network/index.js",["33","34"],"export default {\n  auth\n}\n\nasync function auth (username, password) {\n  const url = window.location.href + 'auth/login'\n\n  const res = await window.fetch('http://localhost:8080/auth/login', {\n    method: 'POST',\n    headers: { 'Content-type': 'application/json' },\n    body: JSON.stringify({ username, password })\n  })\n  return res.status === 200\n}\n",["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":18,"column":5,"nodeType":"43","messageId":"44","endLine":19,"endColumn":54},{"ruleId":"45","severity":1,"message":"46","line":1,"column":1,"nodeType":"47","endLine":3,"endColumn":2},{"ruleId":"48","severity":1,"message":"49","line":6,"column":9,"nodeType":"50","messageId":"51","endLine":6,"endColumn":12},{"ruleId":"37","replacedBy":"52"},{"ruleId":"39","replacedBy":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar",["54"],["55"],"no-global-assign","no-unsafe-negation"]